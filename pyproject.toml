[tool.poetry]
name = "heart-attack"
version = "0.1.0"
description = "Pet project. Heart atattack analyzis"
authors = ["Kirill Vladimirovich <john@example.com>"]
packages = [
    { include = "src" },
    { include = "service" },
    { include = "workflow" },
]

[tool.poetry.dependencies]
python = "^3.9"
numpy = "^1.22.2"
pandas = "^1.4.1"
more-itertools = "^8.12.0"
toolz = "^0.11.2"
scikit-learn = "^1.0.2"
joblib = "^1.1.0"
typing-extensions = "^4.1.1"
uvicorn = "^0.17.5"
pydantic = "^1.9.0"
dependency-injector = "^4.38.0"
fastapi = "^0.73.0"
pandera = "^0.9.0"
seaborn = "^0.11.2"
dynaconf = "^3.1.9"

[tool.poetry.dev-dependencies]
click = "^8.0.3"
matplotlib = "^3.5.1"
plotly = "^5.6.0"
yastyleguide = "0.0.5a"
jupyter = "^1.0.0"
jupyterlab = "^3.4.2"
python-dotenv = "^0.19.2"
commitizen = "^2.27.1"
pre-commit = "^2.20.0"
nitpick = "^0.32.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.commitizen]
name = "cz_customize"

[tool.commitizen.customize]
message_template = "{{change_type}}[{{issue_number}}]:{% if show_message %} {{message}}{% endif %}"
example = "docs(90): add new docs."
schema = "<type>[<issue_number>]: <body>"
schema_pattern = "(fix|wip|docs|sub|ref)(\\[\\d+\\])?:(\\s.*)"
change_type_order = ["wip", "fix", "docs", "sub", "ref"]
commit_parser = "^(?P<change_type>fix|wip|docs|sub|ref)\\(?P<issue_number>\\):\\s(?P<message>.*)?"

[[tool.commitizen.customize.questions]]
type = "list"
name = "change_type"
choices = [
    {value = "wip", name = "wip: Work in progress."},
    {value = "fix", name = "fix: Fix something wrong."},
    {value = "docs", name = "docs: Change documentation."},
    {value = "sub", name = "sub: Some subsidary work."},
    {value = "ref", name = "ref: Refactoring."}
]
message = "Select the type of change you are committing:"

[[tool.commitizen.customize.questions]]
type = "input"
name = "issue_number"
message = "Issue nember:"

[[tool.commitizen.customize.questions]]
type = "input"
name = "message"
message = "Body:"

[[tool.commitizen.customize.questions]]
type = "confirm"
name = "show_message"
message = "Do you want to add body message in commit?"
